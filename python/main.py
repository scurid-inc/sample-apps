# Demo Application showing usage of Scurid Edge Agent

import edgeagent_pb2
import edgeagent_pb2_grpc
import platformapi_pb2 #roshan:
import platformapi_pb2_grpc #roshan:
import grpc

addr = 'localhost:4040'  # update the server and port accordingly

channel = grpc.insecure_channel(addr)  # starting a local only channel
stub = edgeagent_pb2_grpc.ScuridEdgeAgentAPIStub(channel)  # grpc client

stub2 = platformapi_pb2_grpc.ScuridPlatformAgentAPIStub(channel) #roshan: grpc client for file upload and download

def downloadpkg():
    try:
        param1 = 'did:scurid:0x6d01CAa40F91aeD6CfD9AC70F4eD6c8C128646Ea'
        param2 = '/Volumes/Macintosh HD/Users/roshan/Desktop/pkg1/'
        ireq = platformapi_pb2.DownloadFilesReq(identity=param1,path=param2)
        req = stub.DownloadFiles(ireq)
    except grpc.RpcError as e:
        print(f'failed setting: {e.details}')
    else:
        print(req)

def createidentitydemo():
    try:
        ireq = edgeagent_pb2.CreateDeviceIdentityReq()
        req = stub.CreateDeviceIdentity(ireq)
    except grpc.RpcError as e:
        print(f'failed setting: {e.details}')
    else:
        print(req)

def registerIdentity():
    try:
        ireq = edgeagent_pb2.RegisterDeviceIdentityReq()

        
        req = stub.RegisterDeviceIdentity(ireq)
    except grpc.RpcError as e:
        print(f'failed setting: {e.details}')
    else:
        print(req)


def signwithidentitydemo():
    i = 'did:scurid:0x452EEc4cF863B7beC59B4222c3B973346D99Bb94'  # this is generated by createidentitydemo
    p = 'GPS:123;Speed:120'
    try:
        ireq = edgeagent_pb2.SignWithIdentityReq(payload=p, did=i)
        req = stub.SignWithIdentity(ireq)
    except grpc.RpcError as e:
        print(f'failed setting: {e.details}')
    else:
        print(
            req)  # expect result looking something like this 0xce4b09889eb418a7855d9d4f5e4eda5b2faca5a8fcdb70ed2bbc0ba087f44ec27c2e7ef912fdabadc916b9e65e79665980309eee73e8bb4558d0faf95a3a85b21b


def verifysignaturedemo():
    s = '0x4c72c9c1e32c8747b1272eaf5f9ad4834349f03782d54d2b895b2f017f5ab76a2552a75c4f21f4b09128210537966f65d1ad1842e3be268f276a78adca5fef351b'  # this is generated by signwithidentitydemo
    p = 'GPS:123;Speed:120'  # demo value
    i = 'did:scurid:0x452EEc4cF863B7beC59B4222c3B973346D99Bb94'
    try:
        ireq = edgeagent_pb2.VerifySignatureReq(signature=s, payload=p,
                                                did=i)  # input message structure is defined in the proto file
        req = stub.VerifySignature(ireq)
    except grpc.RpcError as e:
        print(f'failed setting: {e.details}')
    else:
        print(req)  # expect T/F response based on the verification done above


if __name__ == '__main__':
    # createidentitydemo()
    # signwithidentitydemo()
    # verifysignaturedemo()
    downloadpkg()